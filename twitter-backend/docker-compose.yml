version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb-test
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-twitterdb}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis_data:/data
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev  # Usar Dockerfile específico para desarrollo
    container_name: nestjs-api
    restart: always
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - MONGODB_URI=${MONGODB_URI:-mongodb://admin:password123@mongodb:27017/twitterdb?authSource=admin}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-this}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - PORT=${PORT:-3000}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - mongodb
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - /app/test  # Excluir explícitamente la carpeta test del volumen
    networks:
      - app-network

volumes:
  mongodb_data:
  redis_data:

networks:
  app-network:
    driver: bridge