{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Twitter API",
		"description": "Collection for NestJS Twitter API with JWT Authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "tweet_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('user_id', responseJson.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"john_doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					}
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('jwt_token', responseJson.access_token);",
									"    pm.environment.set('user_id', responseJson.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					}
				},
				{
					"name": "Get Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"profile"
							]
						}
					}
				},
				{
					"name": "Change Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentPassword\": \"SecurePass123!\",\n  \"newPassword\": \"NewSecurePass456!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/change-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"change-password"
							]
						}
					}
				},
				{
					"name": "Verify Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/verify",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"verify"
							]
						}
					}
				}
			]
		},
		{
			"name": "Admin Actions",
			"item": [
				{
					"name": "Promote User to Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/promote/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"promote",
								"{{user_id}}"
							]
						}
					}
				},
				{
					"name": "Deactivate User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/deactivate/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"deactivate",
								"{{user_id}}"
							]
						}
					}
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users (Admin Only)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					}
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					}
				},
				{
					"name": "Get User by Username",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/username/john_doe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"username",
								"john_doe"
							]
						}
					}
				},
				{
					"name": "Get User by Email (Admin Only)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/email/john.doe@example.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"email",
								"john.doe@example.com"
							]
						}
					}
				},
				{
					"name": "Delete User (Admin Only)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					}
				}
			]
		},
		{
			"name": "Tweets",
			"item": [
				{
					"name": "Create Tweet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('tweet_id', responseJson.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"¡Mi primer tweet desde la API! 🚀 #nestjs #mongodb #jwt\",\n  \"hashtags\": [\"nestjs\", \"mongodb\", \"jwt\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/tweets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets"
							]
						}
					}
				},
				{
					"name": "Get All Tweets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tweets?limit=10&skip=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "0"
								}
							]
						}
					}
				},
				{
					"name": "Get Tweet by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tweets/{{tweet_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets",
								"{{tweet_id}}"
							]
						}
					}
				},
				{
					"name": "Get Tweets by User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tweets/user/{{user_id}}?limit=5&skip=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets",
								"user",
								"{{user_id}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "skip",
									"value": "0"
								}
							]
						}
					}
				},
				{
					"name": "Get Tweets by Hashtag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tweets/hashtag/nestjs?limit=10&skip=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets",
								"hashtag",
								"nestjs"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "0"
								}
							]
						}
					}
				},
				{
					"name": "Update Tweet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Tweet actualizado con nueva información 📝 #update #nestjs\",\n  \"hashtags\": [\"update\", \"nestjs\", \"api\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/tweets/{{tweet_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets",
								"{{tweet_id}}"
							]
						}
					}
				},
				{
					"name": "Delete Tweet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tweets/{{tweet_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets",
								"{{tweet_id}}"
							]
						}
					}
				},
				{
					"name": "Like Tweet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tweets/{{tweet_id}}/like",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets",
								"{{tweet_id}}",
								"like"
							]
						}
					}
				},
				{
					"name": "Retweet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tweets/{{tweet_id}}/retweet",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets",
								"{{tweet_id}}",
								"retweet"
							]
						}
					}
				}
			]
		},
		{
			"name": "Test Data Setup",
			"item": [
				{
					"name": "Register Admin User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('admin_user_id', responseJson.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"admin_user\",\n  \"email\": \"admin@example.com\",\n  \"password\": \"AdminPass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					}
				},
				{
					"name": "Register Test User 2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"jane_smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"password\": \"TestPass456!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					}
				},
				{
					"name": "Create Sample Tweet 1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Aprendiendo NestJS con MongoDB es increíble! 💻 #nestjs #mongodb #learning\",\n  \"hashtags\": [\"nestjs\", \"mongodb\", \"learning\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/tweets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets"
							]
						}
					}
				},
				{
					"name": "Create Sample Tweet 2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"JWT authentication funcionando perfectamente! 🔐 #jwt #security #auth\",\n  \"hashtags\": [\"jwt\", \"security\", \"auth\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/tweets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tweets"
							]
						}
					}
				}
			]
		}
	]
}